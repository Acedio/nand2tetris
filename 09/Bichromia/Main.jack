class Main {
  function void main() {
    var int key;
    var Map map;
    var Display display;
    var Fixed pos_x, pos_y;
    var Fixed camera_dir;
    var Array dists;
    var Array wall_types;
    var Array effect_dists;
    var Array effects;
    var int frame;

    let frame = 7;
    let pos_x = Fixed.new(2, 0);
    let pos_y = Fixed.new(8, 0);
    let camera_dir = Fixed.new(64, 0);
    let dists = Array.new(32);
    let wall_types = Array.new(32);
    let effect_dists = Array.new(32);
    let effects = Array.new(32);

    let map = Map.new(16,16);
    do Luts.load_level(map, 0);

    do Output.moveCursor(0,0);

    let display = Display.new();
    while (true) {
      do map.trace_screen(pos_x, pos_y, camera_dir, dists, wall_types, effect_dists, effects);
      do display.draw(dists, wall_types, effect_dists, effects, frame);
      let key = Keyboard.keyPressed();
      if (key = 130) {  // left
        let camera_dir[0] = camera_dir[0] + 3;
        if (camera_dir[0] > 255) {
          let camera_dir[0] = camera_dir[0] - 256;
        }
      }
      if (key = 132) {  // right
        let camera_dir[0] = camera_dir[0] - 3;
        if (camera_dir[0] < 0) {
          let camera_dir[0] = camera_dir[0] + 256;
        }
      }
      if (key = 131) {  // up
        do map.update_pos(pos_x, pos_y, camera_dir[0]);
      }
      if (key = 133) {  // down
        do map.update_pos(pos_x, pos_y, (128 + camera_dir[0]) & 255);
      }
      if (frame & (~32767)) {
        let frame = frame + frame + 1;
      } else {
        let frame = frame + frame;
      }
    }
    // dispose()s would go here, but we'll never reach them so whatever :P

    return;
  }
}

// vim: set cindent:
