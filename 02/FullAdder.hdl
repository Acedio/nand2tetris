// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    /* First go, 22 nands
    Xor(a=a, b=b, out=aXorB);
    Xor(a=aXorB, b=c, out=sum);
    Or(a=a, b=b, out=aOrB);
    And(a=a, b=b, out=aAndB);
    And(a=aOrB, b=c, out=aOrBAndC);
    Or(a=aAndB, b=aOrBAndC, out=carry);
    */
    /* Turns out the easy way actually uses less nands :P 21. */
    HalfAdder(a=a, b=b, sum=sum0, carry=carry0);
    HalfAdder(a=sum0, b=c, sum=sum, carry=carry1);
    Or(a=carry0, b=carry1, out=carry);
}
